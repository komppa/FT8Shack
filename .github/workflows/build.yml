# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: [self-hosted, Linux, X64]
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/checkout@v2
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Show the release version
        run: |
          echo "Version of this release"
          echo ${{ steps.package-version.outputs.current-version}}

      - name: Build docker image
        run: |
          echo "Building docker image"
          docker build --no-cache -t qwerty .

      - name: Run docker image
        run: |
          echo "Running docker container..."
          if [ -d artefact ]
          then 
          echo "Artefact folder exists, deleting it"
          rm -rf artefact
          mkdir artefact
          fi
          docker run --rm -v "$(pwd)/artefact":/home/ci/project/artefact -eEXPO_ANDROID_KEYSTORE_PASSWORD="${{secrets.EXPO_ANDROID_KEYSTORE_PASSWORD}}" -eEXPO_ANDROID_KEY_PASSWORD="${{secrets.EXPO_ANDROID_KEY_PASSWORD}}" -eEXPO_KEY_JKS="${{secrets.EXPO_KEY_JKS}}" -eEXPO_KEYSTORE_ALIAS="${{secrets.EXPO_KEYSTORE_ALIAS}}" -i qwerty

      - name: Copy app from artefact folder
        run: |
          echo "Copying apk from artefact folder"
          if [ ! -d artefact ]
          then
          echo "Artefact folder does not exist!"
          else
          echo "Artefact folder exsits, copying"
          cp artefact/FT8Shack.apk .
          fi

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ steps.package-version.outputs.current-version}}
          body: |
            Release ${{ steps.package-version.outputs.current-version}}

            ${{ github.event.head_commit.message }}
          draft: true
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./FT8Shack.apk
          asset_name: FT8Shack.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}
        
